#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   For a library or package, you might want to ignore these files since the code is
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#   intended to run in multiple environments; otherwise, check them in:
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
# .python-version
# Bower dependency directory (https://bower.io/)
# Byte-compiled / optimized / DLL files
# C extensions
# Celery stuff
# Comment in the public line in if your project uses Gatsby and not Next.js
# Compiled binary addons (https://nodejs.org/api/addons.html)
# Coverage directory used by tools like istanbul
# Created by .ignore support plugin (hsz.mobi)
# Cython debug symbols
# Dependency directories
# Diagnostic reports (https://nodejs.org/api/report.html)
# Directory for instrumented libs generated by jscoverage/JSCover
# Distribution / packaging
# Django stuff:
# DynamoDB Local files
# Environments
# Flask stuff:
# FuseBox cache
# Gatsby files
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
# IPython
# Installer logs
# Jupyter Notebook
# Logs
# Microbundle cache
# Next.js build output
# Nuxt.js build / generate output
# Optional REPL history
# Optional eslint cache
# Optional npm cache directory
# Output of 'npm pack'
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
# PyBuilder
# PyInstaller
# Pyre type checker
# Rope project settings
# Runtime data
# SageMath parsed files
# Scrapy stuff:
# Serverless directories
# Snowpack dependency directory (https://snowpack.dev/)
# Sphinx documentation
# Spyder project settings
# Stores VSCode versions used for testing VSCode extensions
# TernJS port file
# Translations
# TypeScript cache
# Unit test / coverage reports
# Yarn Integrity file
# dotenv environment variables file
# https://nextjs.org/blog/next-9-1#public-directory-support
# mkdocs documentation
# mypy
# node-waf configuration
# nyc test coverage
# parcel-bundler cache (https://parceljs.org/)
# pipenv
# public
# pyenv
# pytype static type analyzer
# vuepress build output
# yarn v2
### Node template
### Python template
#Pipfile.lock
*$py.class
*.cover
*.db
*.egg
*.egg-info/
*.lcov
*.log
*.manifest
*.mo
*.pid
*.pid.lock
*.pot
*.py,cover
*.py[cod]
*.sage.py
*.seed
*.so
*.spec
*.tgz
*.tsbuildinfo
.Python
.cache
.cache/
.coverage
.coverage.*
.dmypy.json
.dynamodb/
.eggs/
.env
.env*
.env.test
.eslintcache
.fusebox/
.grunt
.hypothesis/
.idea
.installed.cfg
.ipynb_checkpoints
.lock-wscript
.mypy_cache/
.next
.node_repl_history
.nox/
.npm
.nuxt
.nyc_output
.parcel-cache
.pnp.*
.pybuilder/
.pyre/
.pytest_cache/
.pytype/
.ropeproject
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
.scrapy
.serverless/
.spyderproject
.spyproject
.tern-port
.tox/
.venv
.vscode
.vscode-test
.vuepress/dist
.web
.webassets-cache
.yarn-integrity
.yarn/build-state.yml
.yarn/cache
.yarn/install-state.gz
.yarn/unplugged
/site
ENV/
MANIFEST
__pycache__/
__pypackages__/
bower_components
build/
build/Release
celerybeat-schedule
celerybeat.pid
cover/
coverage
coverage.xml
cython_debug/
db.sqlite3
db.sqlite3-journal
develop-eggs/
dist
dist/
dmypy.json
docs/_build/
downloads/
eggs/
env.bak/
env/
htmlcov/
instance/
ipython_config.py
jsconfig.json
jspm_packages/
lerna-debug.log*
lib-cov
lib/
lib64/
local_settings.py
logs
migrations/versions/*
node_modules/
nosetests.xml
npm-debug.log*
out
parts/
pids
pip-delete-this-directory.txt
pip-log.txt
profile_default/
reflex.db
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
sdist/
share/python-wheels/
target/
var/
venv.bak/
venv/
web_modules/
wheels/
yarn-debug.log*
yarn-error.log*